name: Build and Test

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  backend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x

    - name: Restore dependencies
      run: dotnet restore
      working-directory: ./src/IWA_Backend/
      
    - name: Build
      run: dotnet build --no-restore
      working-directory: ./src/IWA_Backend/
      
    - name: Test
      run: dotnet test --no-build --verbosity minimal
      working-directory: ./src/IWA_Backend/

    - name: Publish Windows
      run: dotnet publish -c Release --no-build -o build/windows -r win-x64
      working-directory: ./src/IWA_Backend/

    - name: Publish Linux
      run: dotnet publish -c Release --no-build -o build/linux -r linux-x64
      working-directory: ./src/IWA_Backend/

    - name: Cache build files
      uses: actions/cache@v2
      id: cache-backend-build
      with:
        path: ./src/IWA_Backend/build
        key: ${{ github.sha }}
  
  frontend:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: '14'
          
      - name: Cache npm global modules (yarn)
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-  
          
      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install yarn
        run: npm install -g yarn  
          
      - name: Install dependencies
        run: yarn install
        working-directory: ./src/frontend

      - name: Build frontend
        run: yarn build
        working-directory: ./src/frontend
        env:
          CI: false
      
      - name: Cache build files
        uses: actions/cache@v2
        id: cache-frontend-build
        with:
          path: ./src/frontend/build
          key: ${{ github.sha }}

  create-release:
    runs-on: ubuntu-latest
    needs: [backend, frontend]

    steps:
      - uses: actions/checkout@v2

      - name: Restore frontend build
        uses: actions/cache@v2
        id: cache-frontend-build
        with:
          path: ./build/frontend
          key: ${{ github.sha }}

      - name: Restore backend build
        uses: actions/cache@v2
        id: cache-backend-build
        with:
          path: ./build/backend
          key: ${{ github.sha }}

      - name: Copy source
        run: cp -R ./src ./build/src

      - name: Copy thesis
        run: cp ./docs/thesis/thesis.pdf ./build/thesis.pdf

      - uses: actions/upload-artifact@v2
        with:
          name: bsc-thesis-artifact
          path: ./build

